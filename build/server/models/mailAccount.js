// Generated by CoffeeScript 1.9.3
var Account, cozydb, log, printit, request,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

cozydb = require('cozydb');

request = require('request');

printit = require('printit');

log = printit({
  prefix: 'ent-isen',
  date: true
});

module.exports = Account = (function(superClass) {
  extend(Account, superClass);

  function Account() {
    return Account.__super__.constructor.apply(this, arguments);
  }

  Account.getMailAddress = function(callback) {
    var Konnector, email;
    email = null;
    Konnector = cozydb.getModel('Konnector', {
      id: String,
      slug: String,
      password: String,
      isImporting: String,
      importInterval: String,
      errorMessage: String,
      fieldValues: Object,
      lastAutoImport: String
    });
    return Konnector.request("all", function(err, konnectors) {
      var i;
      if (err) {
        return callback(err);
      } else {
        i = 0;
        return konnectors.forEach(function(konnector) {
          i++;
          if (konnector.slug === "isen") {
            email = konnector.fieldValues.email;
          }
          if (i === konnectors.length) {
            return callback(null, email);
          }
        });
      }
    });
  };

  Account.exists = function(callback) {
    var MailAccount;
    MailAccount = cozydb.getModel('Account', {
      label: String,
      name: String,
      login: String,
      password: String,
      accountType: String,
      smtpServer: String,
      smtpPort: Number,
      smtpSSL: Boolean,
      smtpTLS: Boolean,
      smtpLogin: String,
      smtpPassword: String,
      smtpMethod: String,
      imapLogin: String,
      imapServer: String,
      imapPort: Number,
      imapSSL: Boolean,
      imapTLS: Boolean,
      inboxMailbox: String,
      flaggedMailbox: String,
      draftMailbox: String,
      sentMailbox: String,
      trashMailbox: String,
      junkMailbox: String,
      allMailbox: String,
      favorites: [String],
      patchIgnored: Boolean,
      supportRFC4551: Boolean,
      signature: String
    });
    return MailAccount.request('all', function(err, accounts) {
      var found, i;
      if (err) {
        return callback(err);
      } else {
        found = false;
        if (accounts.length > 0) {
          i = 0;
          return accounts.forEach(function(account) {
            i++;
            if (account.imapServer === 'mail.isen-bretagne.fr') {
              found = true;
            }
            if (i === accounts.length) {
              return callback(null, found);
            }
          });
        } else {
          return callback(null, found);
        }
      }
    });
  };

  return Account;

})(cozydb.CozyModel);
